<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
	 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	 http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
	<!-- aop -->
    <context:property-placeholder  location="classpath:jdbc.properties" />
 	<!--自动扫描加载， 服务器端过滤有@RemoteService注解的类-->
	<context:component-scan base-package="com.daboo">
		<context:exclude-filter type="annotation" expression="org.springframework.remoting.service.annotation.RemoteService" />
	</context:component-scan>
    <context:annotation-config />  
   	<!-- 配置druid数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	      <!-- 基本属性 url、user、password -->
	      <property name="url" value="${jdbc.url}" />
	      <property name="username" value="${jdbc.username}" />
	      <property name="password" value="${jdbc.password}" />
	
	      <!-- 配置初始化大小、最小、最大 -->
	      <property name="initialSize" value="1" />
	      <property name="minIdle" value="1" /> 
	      <property name="maxActive" value="150" />
	
	      <!-- 配置获取连接等待超时的时间 -->
	      <property name="maxWait" value="60000" />
	
	      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	      <property name="timeBetweenEvictionRunsMillis" value="60000" />
	
	      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	      <property name="minEvictableIdleTimeMillis" value="300000" />
	
	      <property name="validationQuery" value="SELECT 'x'" />
	      <property name="testWhileIdle" value="true" />
	      <property name="testOnBorrow" value="false" />
	      <property name="testOnReturn" value="false" />
	      
	   <!--    <property name="removeAbandoned" value="true" /> 打开removeAbandoned功能
    <property name="removeAbandonedTimeout" value="1800" /> 1800秒，也就是30分钟
    <property name="logAbandoned" value="true" /> 关闭abanded连接时输出错误日志 -->
	
	      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	      <property name="poolPreparedStatements" value="false" /><!-- 
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
	
	      <!-- 配置监控统计拦截的filters -->
	      <property name="filters" value="stat" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.daboo.login.common.entity,com.daboo.distribution.model"></property>
		<!--加载mybaties-plugin中的配置文件 -->
		<property name="configLocation" value="classpath:mybatis-plugin-config.xml" />
	</bean>

	<mybatis:scan base-package="com.daboo.**.mapper" />

	<!--数据源事物管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" /> 
        <qualifier value="core" />  
	</bean>
	<!--调用.ENT库丁洋编程式事务 -->
	<bean id="transactionTemplate"  class="org.springframework.transaction.support.TransactionTemplate">  
        <property name="transactionManager">  <ref local="transactionManager" />  
        </property>  
        <!--ISOLATION_DEFAULT 表示由使用的数据库决定  -->  
        <property name="isolationLevelName" value="ISOLATION_DEFAULT"/>  
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
        <!-- <property name="timeout" value="30"/> -->  
    </bean>
	
	
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message/exception</value>
			</list>
		</property>
	</bean>
	
	
	<!-- 使用annotation定义事务   proxy-target-class="true"-->
	<tx:annotation-driven transaction-manager="transactionManager" />	
 
	<import resource="applicationContext-MemCached.xml"/> <!-- 
	<import resource="applicationContext-Quartz.xml"/>  -->
	<import resource="applicationContext-Task.xml"/> 
 
</beans>