package com.daboo.web.context;


import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.daboo.core.exception.BusinessException;
import com.daboo.core.util.StarNodeQueue;
import com.daboo.reward.model.MPointTaskDetailModel;
import com.daboo.reward.service.MemberRewardService;
 

/**
 * StarNodeUtil工具类
 * 
 * @author db
 * 
 */
public class StarNodeUtil{
	/** 初始化实例 */ 
	private static final Logger logger = LoggerFactory.getLogger(StarNodeUtil.class );
	
	private StarNodeQueue<MPointTaskDetailModel> starNodeQueue = new StarNodeQueue<MPointTaskDetailModel>();
	
	private static  StarNodeUtil INSTANCE = new StarNodeUtil();
	private MemberRewardService rewardService = null;
	

	
	
	private StarNodeUtil() {
		
	}


	 


 
	 

	 

	public boolean contains(MPointTaskDetailModel pointTask){
		return starNodeQueue.getBlockingQueue().contains(pointTask);
	}

	/**
	 * 将数据放入队列
	 * 
	 * @param pointTask
	 */
	public  void addStarNodeQueue(MPointTaskDetailModel pointTask) {
		try {
			starNodeQueue.put(pointTask);
		} catch (Exception e) {
			logger.error("starNodeQueue error.", e);
		}
	}

	 

	//初始化方法
	public void init(){
		if(rewardService == null){
			logger.error("rewardService is empty ");
			rewardService = ObjectFactory.getBean(MemberRewardService.class);
		}
		
		new Thread() {
			@Override
			public void run() {
				/**
				 * 初始化
				 */
				initStarNodeQueue();
				while (true) {
					if (starNodeQueue.isEmpty()) {
						try {
							Thread.sleep(60000);
							initStarNodeQueue();
						} catch (InterruptedException e) {
							logger.error(e.getMessage(), e);
						} 
					} else {
						MPointTaskDetailModel pointTaskDetailModel = starNodeQueue.take();
						logger.info("pointTask = {}", pointTaskDetailModel);
						try {
							rewardService.sendBeansAndPoint(pointTaskDetailModel);
						} catch (Exception e) {
							logger.error(e.getMessage(), e);
						}
					}
				}
			}
		}.start();
	}
	
	/**
	 * 初始化Queue
	 */
	public void initStarNodeQueue() {
		try {
			List<MPointTaskDetailModel> details = rewardService.findPointTaskDetails(100);
			for (MPointTaskDetailModel detail : details) {
				addStarNodeQueue(detail);
			}
		} catch (BusinessException be) {
			logger.error(be.getMessage(), be);
		}
	}
	
	
	public static StarNodeUtil getInstance() {
		return INSTANCE;
	}
}
